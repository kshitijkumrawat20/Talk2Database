name: Deploy Backend to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - 'requirements.txt'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker for Ubuntu
            sudo apt-get update -y
            sudo apt-get install docker.io -y
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ${{ secrets.EC2_USER }}

            # Install Docker Compose
            sudo apt-get install docker-compose -y

            # Install AWS CLI
            sudo apt-get install unzip -y
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install --update

            # Configure AWS CLI (Non-interactive)
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}

            # Login to ECR
            aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            # Setup deployment directory
            mkdir -p /home/${{ secrets.EC2_USER }}/Talk2SQL/backend
            cd /home/${{ secrets.EC2_USER }}/Talk2SQL/backend

            # Create docker-compose.yml
            cat > docker-compose.yml << 'EOL'
            services:
              app:
                image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
                ports:
                  - "80:80"
                  - "8000:8000"
                  - "8501:8501" # Expose Streamlit port
                environment:
                  - PYTHONUNBUFFERED=1
                restart: unless-stopped
            EOL

            # Deploy
            docker-compose pull
            docker-compose up -d

            # Verify deployment
            sleep 10
            docker ps
            docker-compose logs