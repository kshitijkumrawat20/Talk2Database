name: Deploy Backend to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - 'requirements.txt'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker for AL2023
            sudo dnf update -y
            sudo dnf install docker -y
            sudo systemctl start docker
            sudo systemctl enable docker
            
            # Add current user to docker group and set permissions
            sudo usermod -aG docker ${{ secrets.EC2_USER }}
            sudo chmod 666 /var/run/docker.sock
            
            # Install Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            
            # Install AWS CLI
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install --update
            
            # Configure AWS CLI
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ secrets.AWS_DEFAULT_REGION }}
            
            # Create deployment directory with proper permissions
            sudo mkdir -p /home/${{ secrets.EC2_USER }}/Talk2SQL/backend
            sudo chown -R ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /home/${{ secrets.EC2_USER }}/Talk2SQL
            cd /home/${{ secrets.EC2_USER }}/Talk2SQL/backend
            
            # Login to ECR with sudo
            sudo aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | sudo docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            
            # Create docker-compose.yml with proper permissions
            cat > docker-compose.yml << 'EOL'
            services:
              app:
                image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
                ports:
                  - "80:80"
                  - "8000:8000"
                environment:
                  - PYTHONUNBUFFERED=1
                restart: unless-stopped
            EOL
            
            # Deploy with sudo
            sudo docker-compose pull
            sudo docker-compose up -d
            
            # Verify deployment
            sleep 10
            sudo docker ps
            sudo docker-compose logs
