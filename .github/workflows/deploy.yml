name: Deploy Backend to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - 'requirements.txt'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to ECR
            aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            
            # Navigate to deployment directory
            mkdir -p /home/ubuntu/Talk2SQL/backend
            cd /home/ubuntu/Talk2SQL/backend
            
            # Stop and remove the old containers
            docker-compose down
            
            # Remove old unused images
            docker image prune -af
            
            # Create new docker-compose.yml
            cat > docker-compose.yml << 'EOL'
version: '3.8'

services:
  backend:
    image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    environment:
      - SERVICE_TYPE=backend
    networks:
      - app_network
    restart: unless-stopped

  frontend:
    image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
    command: streamlit run app/frontend/Talk2SQL.py --server.port 80 --server.address 0.0.0.0
    environment:
      - SERVICE_TYPE=frontend
      - BACKEND_URL=http://backend:8000
    ports:
      - "80:80"
    networks:
      - app_network
    depends_on:
      - backend
    restart: unless-stopped

networks:
  app_network:
    driver: bridge
EOL
            
            # Pull latest images and deploy
            docker-compose pull
            docker-compose up -d
            
            # Verify services are running
            docker-compose ps
